- Don't show superfluous export path in 404 route table
- Improve https://vike.dev/header-file
- Update all examples to not use PageContextBuiltIn but Vike.PageContext instead

- fix pageContext._renderHook.hookFilePath / replace with new prop hookSrc
- refacor/fix skipConfigValue to differentiate between global/page virtual file
- use json-s instead of JSON
- replace configValueSources with configValues for global configs
  - maybe add a _isGlobal option

- Set env type to `{ client: boolean | 'eager', server: boolean | 'eager', config?: boolean }`
  - Eager means that the value is always loaded, no matter what page is being loaded. (By default only the values of the page being renderered are loaded.)
  - Should the option be '_eager' and internal? Is there any added value to make it internal? Custom configs are only meant for advanced use cases anyways. Maybe naming it 'eager' (instead of '_eager') while omitting 'eager` in the Meta type until some user needs it?
  - Values that are defined in `+config.h.js` are loaded at config-time even if `config: false`. (But they can be defined in a `+{configName}.js` and they won't be loaded then.)
    - But they can still be lazily loaded in the client/server runtime
  - Global page config values are always eager

- improve ignoring of dist/
- client/shared/
  client/runtime-server-routing/
  client/runtime-client-routing/
  client/router.js

V1 design stable release:
 - Ensure what client-side loads is minimal
 - Implements TODO comments
 - Docs
   - pageContext.config
   - pageContext.configEntries
   - update migration examples
   - Replace boilerplates with Bati
   - Rewrite documentation to assume usage of `vike-{react,vue,solid}` (while preserving custom integration docs)

After V1 design release:
 - https://github.com/vikejs/vike/issues/1165
 - Implement vike.config.js
   - Move all globals there and add migration warnings
 - Implement data() hook
   - Update `vike-{react,vue,solid}` +tilte.js config
   - New config requestPageContextOnNavigation
     ```ts
     type requestPageContextOnNavigation =
       | true // default
       | 'minimal' // Equivalent to `{ makeHooksUniversal: true }`. (Or maybe `{ makeHooksUniversal: ['data', 'onBeforeRender'] }`?)
       | false // Equivalent to { makeHooksUniversal: true, skipPageContextInit: true }
       | {
           makeHooksUniversal: true | ('onBeforeRender' | 'data' | 'guard')[] // Change env of hooks from `{ client: false, server: true }` to `{ client: true, server: true }`
           // Is `skipPageContextInit: true` too dangerous (the user may break its app)? I think it's ok and, so far, I think a warning in the docs is enough.
           skipPageContextInit: true | string[] // e.g. ['user']
         }
     ```
     - By default, only call guard() hooks on the server-side (if requestPageContextOnNavigation.minimal isn't true)

Features:
 - multiple error pages
 - nested layouts

Sometime:
 - Replace "isomorphic"/"isomorph" to "universal"
 - remove documentProps from examples and boilerplates

Release 1.0.0 breaking changes:
  - `import * from 'vike'`
  - pageContext.url

After 1.0.0 release:
 - Remove 0.4 design examples
   - Update all links to /examples/*-v1
 - Add deprecation warning for pageContext.exports

Contact:
 - Bun
 - Payload CMS
   - Other CMS-related tools like Tina CMS
 - Shopify
 - https://gadget.dev/
   - https://twitter.com/harrybrundage/status/1691760859935109125
   - https://discord.com/channels/@me/1141741825871331408
 - Deno Deploy
 - Cloudflare Workers
 - UI frameworks like qwik (maybe even Angular)
   - See `pnpm create vite@latest` for a list of UI frameworks

